# As it turns out, '-headless' (or the abscence thereof) is nearly universal for indicating a java package is headless.
java_headless: "{{ (java_use_headless) | ansible.builtin.ternary('-headless', '') }}"

java_packages:
  Default:  # With Default, you get whatever Java is included in your distro's default repos.
    OpenJDK:
      Alpine:
        packages:
          - "openjdk{{ java_version }}-{{ (java_type == 'jre') | ansible.builtin.ternary('jre'~java_headless, 'jdk') }}"
      Altlinux:
        packages:
          - "java-{{ java_version }}-openjdk-{{ (java_type == 'jre') | ansible.builtin.ternary('headless', 'devel') }}"
      Archlinux:
        packages:
          - "{{ java_type }}{{ java_version }}-openjdk{{ (java_type == 'jre') | ansible.builtin.ternary(java_headless, '') }}"
      Debian:
        packages:
          - "openjdk-{{ java_version }}-{{ java_type }}{{ java_headless }}"
      FreeBSD:
        packages:
          - "openjdk{{ java_version }}{{ (java_type == 'jre') | ansible.builtin.ternary('-jre', '') }}"
      RedHat:
        packages:
          - "java-{{ java_version }}-openjdk-{{ (java_type == 'jdk') | ansible.builtin.ternary('devel', java_headless) }}"
      Suse:
        packages:
          - "java-{{ java_version }}-openjdk-{{ (java_type == 'jdk') | ansible.builtin.ternary('devel', java_headless) }}"
  Amazon:
    OpenJDK:  # a.k.a. Corretto
      Debian:
        repositories:
          - repo_type: deb822
            name: corretto
            uris: https://apt.corretto.aws
            suites: ['stable', 'main']
            signed_by: https://apt.corretto.aws/corretto.key
        packages:
          - "java-{{ java_version }}-amazon-corretto-{{ java_type }}"
      RedHat:
        repositories:
          - repo_type: yum
            name: AmazonCorretto
            description: Amazon Corretto
            baseurl: https://yum.corretto.aws/$basearch
            gpgkey: https://yum.corretto.aws/corretto.key
            gpgcheck: true
        packages:
          - "java-{{ java_version }}-amazon-corretto-devel"
      Suse:
        repositories:
          - repo_type: zypper
            name: AmazonCorretto
            repo: https://yum.corretto.aws/corretto.repo
            auto_import_keys: true
        packages:
          - "java-{{ java_version }}-amazon-corretto-devel"
  Azul:
    OpenJDK:  # a.k.a. Zulu
      # https://docs.azul.com/core/install/debian
      Debian:
        repositories:
          - repo_type: deb822
            name: zulu-openjdk
            uris: 'https://repos.azul.com/zulu/deb'
            suites: ['stable', 'main']
            signed_by: 'https://repos.azul.com/azul-repo.key'
        packages:
          - "zulu{{ java_version }}-ca-{{ java_type }}{{ java_headless }}"
      # https://docs.azul.com/core/install/rpm-based-linux
      RedHat:
        repositories:
          - repo_type: yum
            name: zulu-openjdk
            description: zulu-openjdk - Azul Systems Inc., Zulu packages
            baseurl: 'https://repos.azul.com/zulu/rpm'
            gpgkey: 'https://assets.azul.com/files/0xB1998361219BD9C9.txt'
            gpgcheck: true
            protect: true
        packages:
          - "zulu{{ java_version }}-{{ java_type }}{{ java_headless }}"
      # https://docs.azul.com/core/install/rpm-based-linux
      Suse:
        repositories:
          - repo_type: zypper
            name: 'https://cdn.azul.com/zulu/bin/zulu-repo-1.0.0-1.noarch.rpm'
            auto_import_keys: true
        packages:
          - "zulu{{ java_version }}-{{ java_type }}{{ java_headless }}"
  Bellsoft:
    OpenJDK:
      Debian:
        repositories:
          - repo_type: deb822
            name:
            uris: https://apt.bell-sw.com/
            suites: ['stable', 'main']
            signed_by: https://download.bell-sw.com/pki/GPG-KEY-bellsoft
        packages:
          - "bellsoft-java{{ java_version }}-{{ java_type == 'jre' | ansible.builtin.ternary('runtime', 'lite') }}"
      RedHat:
        repositories:
          - repo_type: yum
            name: BELLSOFT
            description: BELLSOFT Repository
            baseurl: https://yum.bell-sw.com
            gpgkey: https://download.bell-sw.com/pki/GPG-KEY-bellsoft
            gpgcheck: true
        packages:
          - "bellsoft-java{{ java_version }}-{{ java_type == 'jre' | ansible.builtin.ternary('runtime', 'lite') }}"
      Suse:
        repositories:
          - repo_type: zypper
            name: BELLSOFT
            repo: "https://yum.bell-sw.com"
            auto_import_keys: true
        packages:
          - "bellsoft-java{{ java_version }}-{{ java_type == 'jre' | ansible.builtin.ternary('runtime', 'lite') }}"
  # https://adoptium.net/blog/2021/12/eclipse-temurin-linux-installers-available/
  Eclipse:
    OpenJDK:  # a.k.a. Temurin
      Debian:
        repositories:
          - repo_type: deb822
            name: adoptium
            uris: https://packages.adoptium.net/artifactory/deb
            suites:
              - "{{ ansible_facts['ansible_lsb']['codename'] | default('invalid') }}"
              - main
            signed_by: https://packages.adoptium.net/artifactory/api/gpg/key/public
        packages:
          - apt-transport-https
          - gnupg
          - "temurin-{{ java_version }}-{{ java_type }}"
      RedHat:
        repositories:
          - repo_type: yum
            name: adoptium
            description: Adoptium
            baseurl: "https://packages.adoptium.net/artifactory/rpm/{{ ansible_distribution | lower }}/$releasever/$basearch"
            gpgkey: https://packages.adoptium.net/artifactory/api/gpg/key/public
            gpgcheck: true
        packages:
          - "temurin-{{ java_version }}-{{ java_type }}"
      Suse:
        repositories:
          - repo_type: zypper
            name: adoptium
            repo: "https://packages.adoptium.net/artifactory/rpm/opensuse/$releasever/$basearch"
            auto_import_keys: true
        packages:
          - "temurin-{{ java_version }}-{{ java_type }}"
  # https://learn.microsoft.com/en-us/java/openjdk/install
  Microsoft:
    OpenJDK:
      Debian:
        repositories:
          - repo_type: deb822
            name: microsoft-prod
            baseurl: "https://packages.microsoft.com/packages/debian/{{ ansible_facts['distribution_major_version'] }}/prod"
            suites:
              - "{{ ansible_facts['ansible_lsb']['codename'] | default('invalid') }}"
              - main
            signed_by: https://packages.microsoft.com/keys/microsoft.asc
        packages:
          - "msopenjdk-{{ java_version }}"


# For installations that can not be managed by dependency_mgr
java_archives:
  Azul:
  # https://www.oracle.com/java/technologies/jdk-script-friendly-urls/
  Oracle:
    GraalVM:
      url: "https://download.oracle.com/graalvm/{{ java_version }}/latest/graalvm-jdk-{{
        java_version }}_{{ ansible_system | lower }}-{{ java_oracle_arch }}_bin.tar.gz"
      checksum: "sha256:https://download.oracle.com/graalvm/{{ java_version }}/latest/graalvm-jdk-{{
        java_version }}_{{ ansible_system | lower }}-{{ java_oracle_arch }}_bin.tar.gz.sha256"
    Java:
      url: "https://download.oracle.com/java/{{ java_version }}/latest/jdk-{{
        java_version }}_{{ ansible_system | lower }}-{{ java_oracle_arch }}_bin.{{
        {'RedHat': 'rpm', 'Debian': 'deb'}[ansible_facts['os_family']] | default('tar.gz') }}"
      checksum: "sha256:https://download.oracle.com/java/{{ java_version }}/latest/jdk-{{
        java_version }}_{{ ansible_system | lower }}-{{ java_oracle_arch }}_bin.{{
        {'RedHat': 'rpm', 'Debian': 'deb'}[ansible_facts['os_family']] | default('tar.gz') }}.sha256"

# Full path of the downloaded archive file
java_archive_path: "{{
  (java_archive_download_dir, java_archive_installers[java_vendor][java_variant]['url'] | ansible.builtin.basename) | ansible.builtin.path_join
  }}"

# Oracle download files use weird architecture strings.
java_oracle_arch: "{{ {'x86_64': 'x64'}[ansible_architecture] | default(ansible_architecture) }}"
