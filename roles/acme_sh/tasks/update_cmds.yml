---
# The commands are stored in the config file as a base64 string of unknown encoding.
# As a workaround, you can update it by reinstalling the certificate with a command.
- name: Update cmds for managed certificate
  when:
    - acme_sh_enabled is ansible.builtin.truthy
    - acme_sh_run_hook_setup is ansible.builtin.truthy
    - acme_sh_reloadcmd | default([]) != ansible_local['acme.sh']['reloadcmd'] | default([]) or
      acme_sh_pre_hook | default([]) != ansible_local['acme.sh']['pre_hook'] | default([]) or
      acme_sh_post_hook | default([]) != ansible_local['acme.sh']['post_hook'] | default([]) or
      acme_sh_renew_hook | default([]) != ansible_local['acme.sh']['renew_hook'] | default([]) or
  tags: ['acmesh::config']
  changed_when: true
  ansible.builtin.command:
    chdir: "{{ acme_sh_home }}"
    argv: "{{ command_args | reject('equalto', omit) | list }}"
  vars:
    command_args:
      - "{{ (acme_sh_home | ansible.builtin.normpath, 'acme.sh') | ansible.builtin.path_join }}"
      - '--install-cert'
      - '--home'
      - "{{ acme_sh_home }}"
      - '--domain'
      - "{{ acme_sh_domain | default(ansible_facts['nodename'], true) }}"
      - '--cert-file'
      - "{{ acme_sh_tls_cert_file | ansible.builtin.normpath | mandatory }}"
      - '--key-file'
      - "{{ acme_sh_tls_key_file | ansible.builtin.normpath | mandatory }}"
      - "{{ (acme_sh_tls_fullchain_file | default(false)) | ansible.builtin.ternary('--fullchain-file', omit) }}"
      - "{{ (acme_sh_tls_fullchain_file | default(false)) | ansible.builtin.ternary(acme_sh_tls_fullchain_file, omit) }}"
      # Hooks go last
      - "{{ (acme_sh_run_hook_setup and acme_sh_reloadcmd | default(false)) | ansible.builtin.ternary('--reloadcmd', omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_reloadcmd | default(false)) | ansible.builtin.ternary(acme_sh_reloadcmd, omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_pre_hook | default(false)) | ansible.builtin.ternary('--pre-hook', omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_pre_hook | default(false)) | ansible.builtin.ternary(acme_sh_pre_hook, omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_post_hook | default(false)) | ansible.builtin.ternary('--post-hook', omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_post_hook | default(false)) | ansible.builtin.ternary(acme_sh_post_hook, omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_renew_hook | default(false)) | ansible.builtin.ternary('--renew-hook', omit) }}"
      - "{{ (acme_sh_run_hook_setup and acme_sh_renew_hook | default(false)) | ansible.builtin.ternary(acme_sh_renew_hook, omit) }}"

- name: Update Local Facts
  when:
    - acme_sh_enabled is ansible.builtin.truthy
    - acme_sh_run_hook_setup is ansible.builtin.truthy
  tags: ['acmesh::config']
  ansible.builtin.include_tasks:
    file: update_local_facts.yml
