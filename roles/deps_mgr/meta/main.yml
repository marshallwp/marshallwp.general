galaxy_info:
  author: William P. Marshall
  description: marshallwp.general deps_mgr Role
  company: Industrial Info Resources, Inc.

  # If the issue tracker for your role is not on github, uncomment the
  # next line and provide a value
  # issue_tracker_url: http://example.com/issue/tracker

  # Choose a valid license ID from https://spdx.org - some suggested licenses:
  # - BSD-3-Clause (default)
  # - MIT
  # - GPL-2.0-or-later
  # - GPL-3.0-only
  # - Apache-2.0
  # - CC-BY-4.0
  license: GPL-3.0-or-later

  min_ansible_version: "2.14"

  # If this a Container Enabled role, provide the minimum Ansible Container version.
  # min_ansible_container_version:

  #
  # Provide a list of supported platforms, and for each platform a list of versions.
  # If you don't wish to enumerate all versions for a particular platform, use 'all'.
  # To view available platforms and versions (or releases), visit:
  # https://galaxy.ansible.com/api/v1/platforms/
  #
  # platforms:
  # - name: Fedora
  #   versions:
  #   - all
  #   - 25
  # - name: SomePlatform
  #   versions:
  #   - all
  #   - 1.0
  #   - 7
  #   - 99.99

  galaxy_tags:
    - package
    - repository
    - pkgmgr
    - multiplatform
    # List tags for your role here, one per line. A tag is a keyword that describes
    # and categorizes the role. Users find roles by searching for tags. Be sure to
    # remove the '[]' above, if you add tags to this list.
    #
    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.
    #       Maximum 20 tags per role.

dependencies:
  []
  # List your role dependencies here, one per line. Be sure to remove the '[]' above,
  # if you add dependencies to this list.

argument_specs:
  main:
    short_description: Manages OS packages and repositories
    description: >
      Manages OS packages and repositories at the os_family, distribution, and/or distribution_major_version level.
      Repository management occurs first to ensure package management succeeds. While package management commands
      are performed using the generic `ansible.builtin.package` module, repository management is performed by the
      command(s) associated with the `method` specified for each repository entry.  As such, repository management
      is unfortunately platform-specific.
    author: ['William P. Marshall']
    version_added: '1.0.0'
    options:
      deps_mgr_package_merge_method:
        description: Merge method to use when choosing what packages to manage and how.
        version_added: '1.0.3'
        default: precedence
        choices:
          - precedence
          - lowest_only
      deps_mgr_repo_merge_method:
        description: Merge method to use when choosing what repositories to manage and how.
        version_added: '1.0.3'
        default: lowest_only
        choices:
          - precedence
          - lowest_only
      deps_mgr_package_default_state:
        version_added: '1.2.0'
        description:
          - The default state to assign to packages with simple definitions (i.e. lacking properties).
          - Can use any state supported by the package manager being used.
        default: present
      deps_mgr_list:
        aliases: ['dependencies']
        description: Hierarchical dictionary of packages and repositories to be configured at the os family, distribution, and major version levels.
        type: dict
        required: true
